{"ast":null,"code":"import _slicedToArray from\"C:/Users/91987/Desktop/Social Media/SocialMedia/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useEffect,useState}from\"react\";//creating a context API\nimport{jsx as _jsx}from\"react/jsx-runtime\";export var DarkModeContext=/*#__PURE__*/createContext();//to use the context API we need this below provider to wrap our application in app.js\nexport var DarkModeContextProvider=function DarkModeContextProvider(_ref){var children=_ref.children;var _useState=useState(JSON.parse(localStorage.getItem(\"darkMode\"))||false),_useState2=_slicedToArray(_useState,2),darkMode=_useState2[0],setDarkMode=_useState2[1];//JSON.parse will return false as boolean not a string\n//localStorage to check if it was visited before just take value darkMode\nvar toggle=function toggle(){setDarkMode(!darkMode);};useEffect(function(){localStorage.setItem(\"darkMode\",darkMode);//everytime it changes darkMode it just set in localStorage again\n},[darkMode]);return/*#__PURE__*/_jsx(DarkModeContext.Provider,{value:{darkMode:darkMode,toggle:toggle},children:children});};","map":{"version":3,"sources":["C:/Users/91987/Desktop/Social Media/SocialMedia/client/src/context/darkModeContext.js"],"names":["createContext","useEffect","useState","DarkModeContext","DarkModeContextProvider","children","JSON","parse","localStorage","getItem","darkMode","setDarkMode","toggle","setItem"],"mappings":"4IAAA,OAASA,aAAT,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,CAEA;2CACA,MAAO,IAAMC,CAAAA,eAAe,cAAGH,aAAa,EAArC,CAEP;AACA,MAAO,IAAMI,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,MAAgB,IAAdC,CAAAA,QAAc,MAAdA,QAAc,CACnD,cAA8BH,QAAQ,CAClCI,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,GAAgD,KADd,CAAtC,wCAAMC,QAAN,eAAeC,WAAf,eACgE;AACA;AAChE,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAK,CAChBD,WAAW,CAAC,CAACD,QAAF,CAAX,CACH,CAFD,CAIAT,SAAS,CAAC,UAAI,CACVO,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAgCH,QAAhC,EAA6C;AAChD,CAFQ,CAEP,CAACA,QAAD,CAFO,CAAT,CAIA,mBACI,KAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAG,CAACA,QAAQ,CAARA,QAAD,CAAWE,MAAM,CAANA,MAAX,CAAlC,UACKP,QADL,EADJ,CAKH,CAjBM","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\n//creating a context API\r\nexport const DarkModeContext = createContext();\r\n\r\n//to use the context API we need this below provider to wrap our application in app.js\r\nexport const DarkModeContextProvider = ({children}) => {\r\n    const[darkMode,setDarkMode] = useState(\r\n        JSON.parse(localStorage.getItem(\"darkMode\")) || false);     //JSON.parse will return false as boolean not a string\r\n                                                                    //localStorage to check if it was visited before just take value darkMode\r\n    const toggle = () =>{\r\n        setDarkMode(!darkMode)\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        localStorage.setItem(\"darkMode\",darkMode)    //everytime it changes darkMode it just set in localStorage again\r\n    },[darkMode]);\r\n\r\n    return(\r\n        <DarkModeContext.Provider value ={{darkMode, toggle}}>\r\n            {children}\r\n        </DarkModeContext.Provider>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}