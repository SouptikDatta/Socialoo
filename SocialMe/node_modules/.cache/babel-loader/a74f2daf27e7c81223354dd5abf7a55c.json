{"ast":null,"code":"import _toConsumableArray from \"C:/Users/91987/Desktop/Socialoo/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nfunction shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary.apply(void 0, _toConsumableArray(params));\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };","map":{"version":3,"mappings":";;AAAO,SAASA,gBAAT,CACLC,iBADK,EAELC,MAFK,EAGI;AACT;AACA,MAAI,OAAOD,iBAAP,KAA6B,UAAjC,EAA6C;AAC3C,WAAOA,iBAAiB,MAAjBA,4BAAqBC,MAArBD,EAAP;AACD;;AAED,SAAO,CAAC,CAACA,iBAAT;AACD","names":["shouldThrowError","_useErrorBoundary","params"],"sources":["C:\\Users\\91987\\Desktop\\Socialoo\\client\\node_modules\\@tanstack\\react-query\\src\\utils.ts"],"sourcesContent":["export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n"]},"metadata":{},"sourceType":"module"}